import numpy as np
import pandas as pd

#generating the sample data
n=int(input("Enter no of items: "))
for i in range(n):
    p=list()
    p.append(int(input("Enter first point: ")))
    p.append(int(input("Enter second point: ")))
    if i==0:
        x=np.array(p)
        x.resize(2,1)
    else:
        p=np.array(p)
        p.resize(2,1)
        x=np.hstack([x,p])

print("The data set is: ")
print(x)
print('-'*20)
        
#computing the mean vector
m=list()
m.append(x[0,:].mean())
m.append(x[1,:].mean())
m=np.array(m).reshape(2,1)

print("The mean vector is: ")
print(m)
print("-"*20)


#generating the scatter matrix
s=np.zeros((2,2))
for i in range(x.shape[1]):
    s += (x[:,i]-m).dot((x[:,i]-m).T)
    
print("The Scatter matrix is: ")
print(s)
print("-"*20)

#computing eigen vectors and values
egval,egvec = np.linalg.eig(s)
for i in range(len(egval)):
    eig_vec=egvec[:,i].reshape(1,2).T
    print("Eigen Vector", i+1)
    print(eig_vec)
    print("Eigen Value ", i+1)
    print(egval[i])
    print("-"*20)

#checking if Eigen vectors are correct
for i in range(len(egval)):
    eigv=egvec[:,i].reshape(1,2).T
    np.testing.assert_array_almost_equal(s.dot(eigv),egval[i]*eigv,decimal=6,err_msg="Error 404",verbose=True)
    
#making a list of (eigenvalue,eigenvector) tuples
eig_pairs=[(np.abs(egval[i]),egvec[:,i]) for i in range(len(egval))]

#sort tuples from high to low according to eigen values
eig_pairs.sort(key=lambda x:x[0], reverse=True)
for i in eig_pairs:
    print(i)

#now we print the eigenvector corresponding to the highest eigenvalue
print("Eigen vectors sorted according to Eigen values")
print("\n")
w=eig_pairs[0][1]
#Transform the data space into one dimension
t=w.T.dot(x)
print("\n")
print("-"*40)
print("The transformed data set is: ")
print(t)


output///////////////////////////////////////////////
Enter no of items: 2
Enter first point: 1
Enter second point: 2
Enter first point: 1
Enter second point: 4
The data set is: 
[[1 1]
 [2 4]]
--------------------
The mean vector is: 
[[1.]
 [3.]]
--------------------
The Scatter matrix is: 
[[10.  2.]
 [ 2. 10.]]
--------------------
Eigen Vector 1
[[0.70710678]
 [0.70710678]]
Eigen Value  1
12.0
--------------------
Eigen Vector 2
[[-0.70710678]
 [ 0.70710678]]
Eigen Value  2
8.0
--------------------
(12.0, array([0.70710678, 0.70710678]))
(8.0, array([-0.70710678,  0.70710678]))
Eigen vectors sorted according to Eigen values




----------------------------------------
The transformed data set is: 
[2.12132034 3.53553391]